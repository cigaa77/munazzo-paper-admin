{"version":3,"sources":["webpack:///./src/app/widgets/modules/platformsettings.module.ts","webpack:///./src/app/widgets/platformsetting/platformsetting.component.css","webpack:///./src/app/widgets/platformsetting/platformsetting.component.html","webpack:///./src/app/widgets/platformsetting/platformsetting.component.ts","webpack:///./src/app/widgets/platformsetting/platformsettings-routing.ts"],"names":[],"mappings":"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","file":"widgets-modules-platformsettings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\n\r\nimport {Ng2ListViewCRUD} from \"ng2-listview-crud\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport { Ng2Timeline } from 'ng2-timeline'\r\nimport {Ng2NewsList} from \"../../components/ng2-newslist/ng2newslist.module\";\r\nimport {Ng2SmartTableModule} from \"ng2-smart-table\";\r\nimport { PlatformsettingComponent } from '../platformsetting/platformsetting.component';\r\nimport { PlatformsettingsWidgetRoutingModule } from '../platformsetting/platformsettings-routing';\r\n\r\n@NgModule({\r\n imports:[\r\n     FormsModule,ReactiveFormsModule,\r\n     PlatformsettingsWidgetRoutingModule,\r\n     CommonModule,Ng2SmartTableModule,\r\n     Ng2ListViewCRUD,\r\n     Ng2Timeline,Ng2NewsList\r\n ],\r\n declarations:[PlatformsettingComponent],\r\n providers:[]\r\n})\r\nexport class PlatformsettingsWidgetModule{}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h3 style=\\\"text-align:center\\\">Platformsettings</h3>\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">ID</th>\\n          <th class=\\\"text-center\\\">Key</th>\\n          <th class=\\\"text-center\\\">Value</th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let platformset of platformSettings\\\">\\n          <td>{{platformset.ID}}</td>\\n          <td>{{platformset.Key}}</td>\\n          <td>{{platformset.Value}}</td>\\n          <td>\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"showEditPlatformSettingsForm(platformset)\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n          </td>\\n          <td>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"removePlatformsettings(platformset)\\\">\\n              <i class=\\\"fa fa-minus\\\"></i>\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"showAddPlatformsettingsForm()\\\">\\n      <i class=\\\"fa fa-plus\\\"></i>\\n    </button>\\n  </div>\\n  <!-- ////// -->\\n\\n  <!-- ////// -->\\n\\n  <div *ngIf=\\\"platfromsettingsformForm\\\" class=\\\"col-md-12\\\">\\n    <h3 style=\\\"text-align:center\\\">Add(Platformsettings)</h3>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <form #platfromsettings=\\\"ngForm\\\" (ngSubmit)=\\\"platfromsettings.form.valid && onSubmit(platfromsettings)\\\" id=\\\"form\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Platform Description</label>\\n            <select ngModel class=\\\"form-control\\\" name=\\\"AccountPlatformID\\\" #AccountPlatformID=\\\"ngModel\\\" [(ngModel)]=\\\"newplatfromsettingsform.AccountPlatformID\\\"\\n              required>\\n              <option [ngValue]=\\\"accplatform.ID\\\" *ngFor=\\\"let accplatform of accountplatforms\\\">{{accplatform.Key}}</option>\\n            </select>\\n            <div *ngIf=\\\"platfromsettings.submitted && AccountPlatformID.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"AccountPlatformID.errors.required\\\" class=\\\"alert alert-danger\\\">AccountPlatformID is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Key</label>\\n            <select ngModel class=\\\"form-control\\\" name=\\\"Key\\\" #Key=\\\"ngModel\\\" [(ngModel)]=\\\"newplatfromsettingsform.Key\\\"\\n              required>\\n              <option *ngFor=\\\"let platformKey of platformSettingsDefaultKey\\\">{{platformKey.Key}}</option>\\n            </select>\\n            <div *ngIf=\\\"platfromsettings.submitted && Key.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"Key.errors.required\\\" class=\\\"alert alert-danger\\\">Key is required</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Value</label>\\n            <input ngModel type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newplatfromsettingsform.Type\\\" name=\\\"Value\\\" #Value=\\\"ngModel\\\"\\n            required minlength=\\\"3\\\"/>\\n            <div *ngIf=\\\"platfromsettings.submitted && Value.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"Value.errors.required\\\" class=\\\"alert alert-danger\\\">Value is required</div>\\n              <div *ngIf=\\\"Value.errors.minlength\\\" class=\\\"alert alert-danger\\\">Value must be at least 5 characters</div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancelNewAccountPlatform()\\\">Cancel</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- /////////////// -->\\n  <!-- Edit AccountPlatform -->\\n  <div *ngIf=\\\"editplatfromsettingsformForm\\\" class=\\\"col-md-12\\\">\\n    <h3 style=\\\"text-align:center\\\">Edit(Platformsettings)</h3>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <form #editedplatfromsettings=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdate(editedplatfromsettings)\\\" id=\\\"form\\\">\\n          <div [style.visibility]=\\\"'hidden'\\\">\\n            <label class=\\\"col-md-4\\\">ID</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"editedplatfromsettings.ID\\\" name=\\\"ID\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Platform Description</label>\\n            <select ngModel class=\\\"form-control\\\" name=\\\"AccountPlatformID\\\" [(ngModel)]=\\\"editedplatfromsettings.AccountPlatformID\\\">\\n              <option [ngValue]=\\\"accplatform.ID\\\" *ngFor=\\\"let accplatform of accountplatforms\\\">{{accplatform.Key}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Key</label>\\n            <input ngModel type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"editedplatfromsettings.Key\\\" name=\\\"Key\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Value</label>\\n            <input ngModel type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"editedplatfromsettings.Value\\\" name=\\\"Value\\\" />\\n          </div>\\n          <div class=\\\"form-group col-md-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancelEdits()\\\">Cancel</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- ////// -->\\n</div>\"","import { AccountPlatform } from '../../core/data/AccountPlatform';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { Platform } from '../../core/data/Platform';\nimport { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { clone } from 'lodash';\nimport { Services } from '../../core/commonservices/services';\nimport { Plugin } from '../../core/data/Plugin';\nimport { PlatformsettingsService } from './platformsettings.service';\nimport { Platformsettings } from '../../core/data/PlatformSettings';\nimport { MyGlobal } from '../../core/data/global';\n\n\n@Component({\n  selector: 'app-platformsetting',\n  templateUrl: './platformsetting.component.html',\n  styleUrls: ['./platformsetting.component.css'],\n  providers: [PlatformsettingsService, Services, Platformsettings, MyGlobal]\n})\nexport class PlatformsettingComponent implements OnInit,DoCheck {\n  plugins: Plugin[];\n  platforms: Platform[];\n  accountplatforms: AccountPlatform[];\n  platformSettings: Platformsettings[];\n  platformSettingsDefaultKey: any[];\n  public form: FormGroup;\n  public submitted: boolean = false;\n  returnUrl: string;\n  message: string;\n\n  //  accounPLatformForm: boolean = false;\n  platfromsettingsformForm: boolean = false;\n  editplatfromsettingsformForm: boolean = false;\n  isNewForm: boolean;\n  newplatfromsettingsform: any = {};\n  editedplatfromsettings: any = {};\n  accountPlatformID: number;\n\n  constructor(\n    private platformsettingsService: PlatformsettingsService,\n    private services: Services,\n    private router: Router,\n    private accountIdForToken: MyGlobal,\n    private platformSetting: Platformsettings,\n    private actvatedRoute: ActivatedRoute) {\n    this.platformSetting.ID = 0,\n      this.platformSetting.CreatedOn = \"0000-00-00 00:00:00\";\n    this.platformSetting.UpdatedOn = \"0000-00-00 00:00:00\";\n    this.platformSetting.Deleted = false;\n  }\n\n  ngOnInit() {\n    this.accountPlatformID = parseInt(localStorage.getItem(\"accountplatformId\"));\n    this.getPlatformsettings();\n    this.getAllAccountPlatforms();\n    this.getAllPlatfroms();\n    this.getAllPlugins();\n    this.getPlatformsettingByDefault();\n  }\n\n  ngDoCheck(){\n    // this.getPlatformsettingByDefault();\n  }\n\n  public onSubmit(form: NgForm): void {\n    this.platformSetting.AccountPlatformID = this.accountPlatformID;\n    this.platformSetting.Value = form.value.Value;\n    this.platformSetting.Key = form.value.Key;\n    this.platformsettingsService.createPlatformsettings(this.platformSetting).subscribe(t => {\n      if (t) {\n        this.platfromsettingsformForm = false;\n        this.getPlatformsettings();\n      }\n      else {\n        this.message = \"Please try again!!\";\n      }\n    })\n    this.submitted = true;\n  }\n\n  public onSubmitUpdate(form: NgForm): void {\n    this.platformSetting.ID = form.value.ID;\n    this.platformSetting.AccountPlatformID = form.value.AccountPlatformID;\n    this.platformSetting.Value = form.value.Value;\n    this.platformSetting.Key = form.value.Key;\n    this.platformsettingsService.updatePlatformsettings(this.form.value).subscribe(t => {\n      if (t) {\n        this.editplatfromsettingsformForm = false;\n        this.editedplatfromsettings = {};\n        this.getPlatformsettings();\n      }\n      else {\n        this.message = \"Please try again!!\";\n      }\n    })\n    this.submitted = true;\n  }\n\n\n\n  showEditPlatformSettingsForm(platformsetting: Platformsettings) {\n    if (!platformsetting) {\n      this.platfromsettingsformForm = false;\n      return;\n    }\n    this.editplatfromsettingsformForm = true;\n    this.editedplatfromsettings = clone(platformsetting);\n  }\n\n  showAddPlatformsettingsForm() {\n    // resets form if edited platfromsettings\n    if (this.platformSettings) {\n      if (this.platformSettings.length) {\n        this.newplatfromsettingsform = {};\n      }\n    }\n    this.platfromsettingsformForm = true;\n    this.isNewForm = true;\n\n  }\n\n  updateAccountPlatform() {\n    this.platformsettingsService.updatePlatformsettings(this.editedplatfromsettings);\n    this.editplatfromsettingsformForm = false;\n    this.editedplatfromsettings = {};\n  }\n\n\n  removePlatformsettings(platformsetting: Platformsettings) {\n    this.platformsettingsService.deletePlatformsettingsById(platformsetting).subscribe(t => {\n      if (t) {\n        this.editplatfromsettingsformForm=false;\n        this.platfromsettingsformForm = false;\n        this.getPlatformsettings();\n      }\n      else {\n        this.message = \"Please try again!!\";\n      }\n    })\n    this.submitted = true;\n  }\n\n  getPlatformsettings() {\n    this.platformsettingsService.getAllPlatformsettings(this.accountPlatformID).subscribe(p => {\n      if(p.length==42){\n        this.platformSettings=[]\n      }\n      else{\n        this.platformSettings = p;\n      }\n      \n      console.log(this.platformSettings)\n    }\n    );\n  }\n\n  getPlatformsettingByDefault() {\n    this.platformsettingsService.getPlatformsettingByDefault(this.accountPlatformID).subscribe(p => {\n      this.platformSettingsDefaultKey = p;\n      console.log(this.platformSettingsDefaultKey);\n    })\n  }\n\n\n  getAllAccountPlatforms() {\n    this.services.getAllAccountPlatform().subscribe(p => {\n      this.accountplatforms = p;\n      console.log(this.accountplatforms);\n    }\n    );\n  }\n\n  getAllPlatfroms() {\n    this.services.getAllPlatform().subscribe(p => {\n      this.platforms = p;\n    }\n    );\n  }\n\n  getAllPlugins() {\n    this.services.getAllPlugin().subscribe(p => {\n      this.plugins = p\n    }\n    );\n  }\n\n  cancelNewAccountPlatform() {\n    this.newplatfromsettingsform = {};\n    this.platfromsettingsformForm = false;\n  }\n\n  cancelEdits() {\n    this.newplatfromsettingsform = {};\n    this.platfromsettingsformForm = false;\n  }\n\n}\n","/**\r\n * Created by mohma on 7/26/2017.\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport{Routes,RouterModule} from '@angular/router';\r\nimport { PlatformsettingComponent } from './platformsetting.component';\r\n\r\nconst routes:Routes=[\r\n    {\r\n        path:'',\r\n        component:PlatformsettingComponent,\r\n        data:{\r\n            title:'data'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class PlatformsettingsWidgetRoutingModule{}"],"sourceRoot":""}